name: CI
on:
  workflow_dispatch:
  schedule:
    - cron: "30 14 * * *"

jobs:
  check:
    permissions: write-all
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Should build?
        id: should_build
        shell: bash
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if ! git checkout origin/update build.md; then
            echo "first time building!"
            echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT
          else
            UPDATE_CFG=$(./build.sh config.toml --config-update)
            if [ "$UPDATE_CFG" ]; then
              echo "SHOULD_BUILD=1" >> $GITHUB_OUTPUT
            else
              echo "SHOULD_BUILD=0" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Clear older runs
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run list -L400 --json databaseId -q '.[].databaseId' | tail -n+10 | xargs -IID gh api "repos/$GITHUB_REPOSITORY/actions/runs/ID" -X DELETE || :

    outputs:
      SHOULD_BUILD: ${{ steps.should_build.outputs.SHOULD_BUILD }}

  build:
    permissions: write-all
    needs: check
    uses: ./.github/workflows/matrix-build.yml
    if: ${{ needs.check.outputs.SHOULD_BUILD == 1 }}

  # This job ensures the workflow doesn't fail when builds are skipped
  status:
    runs-on: ubuntu-latest
    needs: [check, build]
    if: always()
    steps:
      - name: Workflow status
        run: |
          echo "Check job result: ${{ needs.check.result }}"
          echo "Build job result: ${{ needs.build.result }}"
          echo "Should build: ${{ needs.check.outputs.SHOULD_BUILD }}"

          # If check failed, fail the workflow
          if [[ "${{ needs.check.result }}" == "failure" ]]; then
            echo "❌ Check job failed"
            exit 1
          fi

          # If we should build but build failed, fail the workflow
          if [[ "${{ needs.check.outputs.SHOULD_BUILD }}" == "1" && "${{ needs.build.result }}" == "failure" ]]; then
            echo "❌ Build job failed"
            exit 1
          fi

          # If we should build and build succeeded, succeed
          if [[ "${{ needs.check.outputs.SHOULD_BUILD }}" == "1" && "${{ needs.build.result }}" == "success" ]]; then
            echo "✅ Build completed successfully"
            exit 0
          fi

          # If we shouldn't build (no changes), succeed
          if [[ "${{ needs.check.outputs.SHOULD_BUILD }}" == "0" ]]; then
            echo "✅ No build needed - workflow completed successfully"
            exit 0
          fi

          # Default case - succeed
          echo "✅ Workflow completed"
          exit 0
